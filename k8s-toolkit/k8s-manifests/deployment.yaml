apiVersion: v1
kind: Namespace
metadata:
  name: k8s-toolkit
  labels:
    name: k8s-toolkit

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-toolkit-sa
  namespace: k8s-toolkit

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-toolkit-reader
rules:
- apiGroups: [""]
  resources: ["pods", "services", "nodes", "events", "configmaps", "secrets", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies", "ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-toolkit-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-toolkit-reader
subjects:
- kind: ServiceAccount
  name: k8s-toolkit-sa
  namespace: k8s-toolkit

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-toolkit
  namespace: k8s-toolkit
  labels:
    app: k8s-toolkit
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-toolkit
  template:
    metadata:
      labels:
        app: k8s-toolkit
    spec:
      serviceAccountName: k8s-toolkit-sa
      containers:
      - name: k8s-toolkit
        image: your-registry/k8s-toolkit:v1.0.0
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: PORT
          value: "3000"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-toolkit-service
  namespace: k8s-toolkit
  labels:
    app: k8s-toolkit
spec:
  selector:
    app: k8s-toolkit
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8s-toolkit-ingress
  namespace: k8s-toolkit
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: k8s-toolkit.local  # Change to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: k8s-toolkit-service
            port:
              number: 80